{
  "root": true,
  "env": {
    "browser": true,
    "commonjs": true,
    "node": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["tsconfig.json"]
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "next/core-web-vitals"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "array-bracket-newline": [
      "error",
      { "multiline": true }
    ],
    "array-callback-return": "error",
    "arrow-spacing": "error",
    "arrow-parens": "error",
    "block-spacing": "error",
    "brace-style": "error",
    "comma-dangle": [
      "error",
      "never"
    ],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "curly": "error",
    "default-case-last": "error",
    "dot-location": [
      "error",
      "property"
    ],
    "eol-last": "error",
    "func-call-spacing": "error",
    "indent": [
      "error", 2,
      {
        "SwitchCase": 1
      }
    ],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "max-len": [
      "error",
      {
        "code": 100,
        "ignoreUrls": true
      }
    ],
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 10
      }
    ],
    "no-alert": "error",
    "no-eval": "error",
    "no-console": [
      "error",
      {
        "allow": ["info", "warn", "error"]
      }
    ],
    "no-duplicate-imports": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": [
      "error",
      { "max": 1 }
    ],
    "no-param-reassign": "error",
    "no-return-assign": "error",
    "no-trailing-spaces": "error",
    "no-underscore-dangle": "error",
    "no-use-before-define": "off",
    "no-useless-return": "error",
    "no-unneeded-ternary": "error",
    "no-nested-ternary": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "one-var": [
      "error",
      "never"
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "never",
        "prev": "import",
        "next": "import"
      },
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let"
        ],
        "next": [
          "const",
          "let"
        ]
      }
    ],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "quotes": [
      "error",
      "single"
    ],
    "require-atomic-updates": "off",
    "rest-spread-spacing": "error",
    "semi": [
      "error",
      "never"
    ],
    "space-before-blocks": [
      "error",
      {
        "functions": "always",
        "keywords": "always"
      }
    ],
    "spaced-comment": [
      "error",
      "always"
    ],
    "switch-colon-spacing": "error",
    "yoda": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/brace-style": "error",
    "@typescript-eslint/comma-dangle": "error",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "singleline": {
          "requireLast": false
        },
        "multiline": {
          "delimiter": "none",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-explicit-any": [
      "error",
      { "ignoreRestArgs": true }
    ],
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "args": "none" }
    ],
    "@typescript-eslint/array-type": [
      "error",
      { "default": "array" }
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ]
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "enumMember",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": [
      "error",
      { "ignoreArrowShorthand": true }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      { "allowExpressions": true }
    ],
    "@typescript-eslint/type-annotation-spacing": [
      "error"
    ],
    "react/jsx-closing-bracket-location": [
      "error",
      {
        "selfClosing": "tag-aligned",
        "nonEmpty": "tag-aligned"
      }
    ],
    "react/jsx-closing-tag-location": [
      "error",
      {
        "selfClosing": "tag-aligned",
        "nonEmpty": "tag-aligned"
      }
    ],
    "react/jsx-max-props-per-line": [
      "error",
      { "maximum": 2 }
    ],
    "react/jsx-curly-spacing": [
      "error",
      {
        "when": "never",
        "spacing": {
          "objectLiterals": "never"
        }
      }
    ],
    "react/jsx-equals-spacing": "error",
    "react/jsx-handler-names": "error",
    "react/jsx-indent": [
      "error",
      2
    ],
    "react/jsx-indent-props": [
      "error",
      2
    ],
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "react/jsx-no-useless-fragment": [
      "error",
      { "allowExpressions": true }
    ],
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-tag-spacing": [
      "error",
      { "beforeSelfClosing": "always" }
    ],
    "react/jsx-wrap-multilines": "error",
    "react/no-array-index-key": "error",
    "react/no-unstable-nested-components": "error",
    "react/no-children-prop": "error"
  }
}
